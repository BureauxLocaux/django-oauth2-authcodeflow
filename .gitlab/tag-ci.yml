include:
  - local: '/.gitlab/python-ci.yml'
.tag:
  extends:
    - .python
  stage: release
  when: manual
  only:
    - branches
  before_script:
    - |
      mkdir -p ~/.ssh && chmod 700 ~/.ssh
      echo "StrictHostKeyChecking no" > ~/.ssh/config
      eval $(ssh-agent -s)
      git config user.name "${GITLAB_USER_NAME}"
      git config user.email "${GITLAB_USER_EMAIL}"
      git remote set-url origin git@${CI_SERVER_HOST}:${CI_PROJECT_PATH}.git
  script:
    - |
      set -e
      if echo "${CI_JOB_NAME}" | grep -q ':'; then
        export RULE_UPDATE=$(echo "${CI_JOB_NAME}"|cut -d: -f2)
      else
        echo "Job name should be in the format job:UPDATE where UPDATEÂ should be major, minor or patch" >&2
        exit 1
      fi
      if [ ! -s "$DEPLOY_KEY_TO_TAG" ]; then
        echo "DEPLOY_KEY_TO_TAG should points to an ssh private key to push a tag in this repository" >&2
        exit 1
      fi
      (cat "$DEPLOY_KEY_TO_TAG" | tr -d "\r"; echo "") | ssh-add - >/dev/null
      make bump_version what=$RULE_UPDATE
      make merge_changelogs tag
      VER=$(make version)
      git push origin refs/tags/v$VER
      if [ "$CI_COMMIT_BRANCH" = "$CI_DEFAULT_BRANCH" ]; then git push -o ci.skip origin HEAD:$CI_COMMIT_BRANCH; fi
      echo "v$VER tagged and pushed"
